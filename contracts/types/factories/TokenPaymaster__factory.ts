/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TokenPaymaster,
  TokenPaymasterInterface,
} from "../TokenPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "walletDeployer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "extraUnstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "theDeployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "requiredPreFund",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022d4380380620022d48339810160408190526200003491620003df565b8180826200004233620000ae565b6200004d81620000fe565b5060056200005c838262000574565b5060066200006b828262000574565b5050600780546001600160a01b0319166001600160a01b03861617905550620000963060016200012a565b620000a5303360001962000213565b50505062000667565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001086200033b565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216620001865760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b80600460008282546200019a919062000640565b90915550506001600160a01b03821660009081526002602052604081208054839290620001c990849062000640565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038316620002775760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016200017d565b6001600160a01b038216620002da5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016200017d565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000546001600160a01b03163314620003975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200017d565b565b505050565b6001600160a01b0381168114620003b457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b8051620003da816200039e565b919050565b600080600060608486031215620003f557600080fd5b835162000402816200039e565b602085810151919450906001600160401b03808211156200042257600080fd5b818701915087601f8301126200043757600080fd5b8151818111156200044c576200044c620003b7565b604051601f8201601f19908116603f01168101908382118183101715620004775762000477620003b7565b816040528281528a868487010111156200049057600080fd5b600093505b82841015620004b4578484018601518185018701529285019262000495565b82841115620004c65760008684830101525b809750505050505050620004dd60408501620003cd565b90509250925092565b600181811c90821680620004fb57607f821691505b6020821081036200051c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039957600081815260208120601f850160051c810160208610156200054b5750805b601f850160051c820191505b818110156200056c5782815560010162000557565b505050505050565b81516001600160401b03811115620005905762000590620003b7565b620005a881620005a18454620004e6565b8462000522565b602080601f831160018114620005e05760008415620005c75750858301515b600019600386901b1c1916600185901b1785556200056c565b600085815260208120601f198616915b828110156200061157888601518255948401946001909101908401620005f0565b5085821015620006305787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082198211156200066257634e487b7160e01b600052601160045260246000fd5b500190565b611c5d80620006776000396000f3fe6080604052600436106101ac5760003560e01c80638da5cb5b116100ec578063c23a5cea1161008a578063dd62ed3e11610064578063dd62ed3e146104bb578063f0dda65c1461050e578063f2fde38b1461052e578063f465c77e1461054e57600080fd5b8063c23a5cea1461047e578063c399ec881461049e578063d0e30db0146104b357600080fd5b8063a9059cbb116100c6578063a9059cbb146103fc578063a9a234091461041c578063b0d691fe1461043c578063bb9fe6bf1461046957600080fd5b80638da5cb5b1461039c57806395d89b41146103c7578063a457c2d7146103dc57600080fd5b8063313ce5671161015957806370a082311161013357806370a08231146102dc57806371481d321461031f578063715018a614610371578063796d43711461038657600080fd5b8063313ce56714610280578063395093511461029c578063584465f2146102bc57600080fd5b806318160ddd1161018a57806318160ddd14610221578063205c28781461024057806323b872dd1461026057600080fd5b80630396cb60146101b157806306fdde03146101c6578063095ea7b3146101f1575b600080fd5b6101c46101bf3660046117ac565b61056e565b005b3480156101d257600080fd5b506101db610694565b6040516101e8919061183b565b60405180910390f35b3480156101fd57600080fd5b5061021161020c366004611870565b610726565b60405190151581526020016101e8565b34801561022d57600080fd5b506004545b6040519081526020016101e8565b34801561024c57600080fd5b506101c461025b366004611870565b61073e565b34801561026c57600080fd5b5061021161027b36600461189c565b6107ba565b34801561028c57600080fd5b50604051601281526020016101e8565b3480156102a857600080fd5b506102116102b7366004611870565b6107de565b3480156102c857600080fd5b506101c46102d73660046118dd565b61082a565b3480156102e857600080fd5b506102326102f73660046118dd565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b34801561032b57600080fd5b5060075461034c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e8565b34801561037d57600080fd5b506101c4610879565b34801561039257600080fd5b50610232613a9881565b3480156103a857600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff1661034c565b3480156103d357600080fd5b506101db61088d565b3480156103e857600080fd5b506102116103f7366004611870565b61089c565b34801561040857600080fd5b50610211610417366004611870565b610972565b34801561042857600080fd5b506101c46104373660046118fa565b610980565b34801561044857600080fd5b5060015461034c9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561047557600080fd5b506101c461099a565b34801561048a57600080fd5b506101c46104993660046118dd565b610a20565b3480156104aa57600080fd5b50610232610ab0565b6101c4610b48565b3480156104c757600080fd5b506102326104d6366004611989565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260036020908152604080832093909416825291909152205490565b34801561051a57600080fd5b506101c4610529366004611870565b610bb4565b34801561053a57600080fd5b506101c46105493660046118dd565b610bca565b34801561055a57600080fd5b506101db6105693660046119c2565b610c33565b610576610e59565b600154604080517f390b9978000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff90921691630396cb609134918591859163390b99789160048082019260209290919082900301816000875af11580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190611a16565b6106229190611a62565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815263ffffffff9190911660048201526024016000604051808303818588803b15801561067857600080fd5b505af115801561068c573d6000803e3d6000fd5b505050505050565b6060600580546106a390611a8a565b80601f01602080910402602001604051908101604052809291908181526020018280546106cf90611a8a565b801561071c5780601f106106f15761010080835404028352916020019161071c565b820191906000526020600020905b8154815290600101906020018083116106ff57829003601f168201915b5050505050905090565b600033610734818585610eda565b5060019392505050565b610746610e59565b6001546040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561067857600080fd5b6000336107c885828561108d565b6107d385858561115e565b506001949350505050565b33600081815260036020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906107349082908690610825908790611add565b610eda565b610832610e59565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610881610e59565b61088b6000611411565b565b6060600680546106a390611a8a565b33600081815260036020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6107d38286868403610eda565b60003361073481858561115e565b610988611486565b610994848484846114aa565b50505050565b6109a2610e59565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a0c57600080fd5b505af1158015610994573d6000803e3d6000fd5b610a28610e59565b6001546040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301529091169063c23a5cea90602401600060405180830381600087803b158015610a9557600080fd5b505af1158015610aa9573d6000803e3d6000fd5b5050505050565b6001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610b1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190611af5565b905090565b6001546040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063b760faf99034906024016000604051808303818588803b158015610a9557600080fd5b610bbc610e59565b610bc682826114dd565b5050565b610bd2610e59565b610bfc30610bf560005473ffffffffffffffffffffffffffffffffffffffff1690565b6000610eda565b610c05816115fd565b610c3030827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610eda565b50565b60606000610c40836116b1565b9050613a988560a0013511610cd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f546f6b656e5061796d61737465723a2067617320746f6f206c6f7720666f722060448201527f706f73744f700000000000000000000000000000000000000000000000000000606482015260840161095c565b610ce46040860186611b0e565b159050610d9857610cf4856116c4565b80610d056102f760208801886118dd565b1015610d93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f546f6b656e5061796d61737465723a206e6f2062616c616e636520287072652d60448201527f6372656174652900000000000000000000000000000000000000000000000000606482015260840161095c565b610e11565b80610da96102f760208801886118dd565b1015610e11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f546f6b656e5061796d61737465723a206e6f2062616c616e6365000000000000604482015260640161095c565b610e1e60208601866118dd565b6040805173ffffffffffffffffffffffffffffffffffffffff9092166020830152016040516020818303038152906040529150509392505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461088b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161095c565b73ffffffffffffffffffffffffffffffffffffffff8316610f7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161095c565b73ffffffffffffffffffffffffffffffffffffffff821661101f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161095c565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600360209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109945781811015611151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161095c565b6109948484848403610eda565b73ffffffffffffffffffffffffffffffffffffffff8316611201576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161095c565b73ffffffffffffffffffffffffffffffffffffffff82166112a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161095c565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600260205260409020548181101561135a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161095c565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526002602052604080822085850390559185168152908120805484929061139e908490611add565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161140491815260200190565b60405180910390a3610994565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461088b57600080fd5b60006114b8838501856118dd565b905060006114d06114cb613a9885611add565b6116b1565b905061068c82308361115e565b73ffffffffffffffffffffffffffffffffffffffff821661155a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161095c565b806004600082825461156c9190611add565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260026020526040812080548392906115a6908490611add565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b611605610e59565b73ffffffffffffffffffffffffffffffffffffffff81166116a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161095c565b610c3081611411565b60006116be606483611b7a565b92915050565b60006116d36040830183611b0e565b6116e291601491600091611bb5565b6116eb91611bdf565b60075460609190911c915073ffffffffffffffffffffffffffffffffffffffff168114610bc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f546f6b656e5061796d61737465723a2077726f6e672077616c6c65742064657060448201527f6c6f796572000000000000000000000000000000000000000000000000000000606482015260840161095c565b63ffffffff81168114610c3057600080fd5b6000602082840312156117be57600080fd5b81356117c98161179a565b9392505050565b6000815180845260005b818110156117f6576020818501810151868301820152016117da565b81811115611808576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006117c960208301846117d0565b73ffffffffffffffffffffffffffffffffffffffff81168114610c3057600080fd5b6000806040838503121561188357600080fd5b823561188e8161184e565b946020939093013593505050565b6000806000606084860312156118b157600080fd5b83356118bc8161184e565b925060208401356118cc8161184e565b929592945050506040919091013590565b6000602082840312156118ef57600080fd5b81356117c98161184e565b6000806000806060858703121561191057600080fd5b84356003811061191f57600080fd5b9350602085013567ffffffffffffffff8082111561193c57600080fd5b818701915087601f83011261195057600080fd5b81358181111561195f57600080fd5b88602082850101111561197157600080fd5b95986020929092019750949560400135945092505050565b6000806040838503121561199c57600080fd5b82356119a78161184e565b915060208301356119b78161184e565b809150509250929050565b6000806000606084860312156119d757600080fd5b833567ffffffffffffffff8111156119ee57600080fd5b84016101608187031215611a0157600080fd5b95602085013595506040909401359392505050565b600060208284031215611a2857600080fd5b81516117c98161179a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff808316818516808303821115611a8157611a81611a33565b01949350505050565b600181811c90821680611a9e57607f821691505b602082108103611ad7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008219821115611af057611af0611a33565b500190565b600060208284031215611b0757600080fd5b5051919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611b4357600080fd5b83018035915067ffffffffffffffff821115611b5e57600080fd5b602001915036819003821315611b7357600080fd5b9250929050565b600082611bb0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008085851115611bc557600080fd5b83861115611bd257600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015611c1f5780818660140360031b1b83161692505b50509291505056fea2646970667358221220d58edf4ccf785b381770770d4c6c0cc32a4f88e2b0de97b2baddbca2033895b964736f6c634300080f0033";

type TokenPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenPaymaster__factory extends ContractFactory {
  constructor(...args: TokenPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    walletDeployer: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenPaymaster> {
    return super.deploy(
      walletDeployer,
      _symbol,
      _entryPoint,
      overrides || {}
    ) as Promise<TokenPaymaster>;
  }
  override getDeployTransaction(
    walletDeployer: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      walletDeployer,
      _symbol,
      _entryPoint,
      overrides || {}
    );
  }
  override attach(address: string): TokenPaymaster {
    return super.attach(address) as TokenPaymaster;
  }
  override connect(signer: Signer): TokenPaymaster__factory {
    return super.connect(signer) as TokenPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenPaymasterInterface {
    return new utils.Interface(_abi) as TokenPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenPaymaster {
    return new Contract(address, _abi, signerOrProvider) as TokenPaymaster;
  }
}
