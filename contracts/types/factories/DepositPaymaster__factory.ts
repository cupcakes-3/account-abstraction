/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DepositPaymaster,
  DepositPaymasterInterface,
} from "../DepositPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addDepositFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "extraUnstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "tokenPriceOracle",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "unlockBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokensTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e8c38038062001e8c833981016040819052620000349162000148565b8062000040336200006b565b6200004b81620000bb565b5062000064336000908152600460205260409020439055565b506200017a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000c5620000e7565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314620001465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b6000602082840312156200015b57600080fd5b81516001600160a01b03811681146200017357600080fd5b9392505050565b611d02806200018a6000396000f3fe6080604052600436106101805760003560e01c8063a9a23409116100d6578063c399ec881161007f578063d0e30db011610059578063d0e30db0146104bd578063f2fde38b146104c5578063f465c77e146104e557600080fd5b8063c399ec8814610466578063cc9c837c1461047b578063cd8f80c21461049b57600080fd5b8063bb9fe6bf116100b0578063bb9fe6bf146103f9578063c23a5cea1461040e578063c23f001f1461042e57600080fd5b8063a9a2340914610369578063addd509914610389578063b0d691fe146103cc57600080fd5b80635476bd7211610138578063796d437111610112578063796d4371146102e35780638da5cb5b146102f95780639ed0fb681461034557600080fd5b80635476bd721461028e578063584465f2146102ae578063715018a6146102ce57600080fd5b8063382edd9e11610169578063382edd9e146101ba578063493b0170146101da5780634a6f84cf1461025357600080fd5b80630396cb6014610185578063205c28781461019a575b600080fd5b610198610193366004611799565b610512565b005b3480156101a657600080fd5b506101986101b53660046117d8565b610638565b3480156101c657600080fd5b506101986101d5366004611804565b6106b4565b3480156101e657600080fd5b506102396101f5366004611845565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260036020908152604080832093909416825291825282812054600490925291909120549091565b604080519283526020830191909152015b60405180910390f35b34801561025f57600080fd5b5061028061026e36600461187e565b60046020526000908152604090205481565b60405190815260200161024a565b34801561029a57600080fd5b506101986102a9366004611845565b6107e9565b3480156102ba57600080fd5b506101986102c936600461187e565b610876565b3480156102da57600080fd5b506101986108c5565b3480156102ef57600080fd5b506102806188b881565b34801561030557600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161024a565b34801561035157600080fd5b50610198336000908152600460205260409020439055565b34801561037557600080fd5b5061019861038436600461189b565b6108d9565b34801561039557600080fd5b506103206103a436600461187e565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b3480156103d857600080fd5b506001546103209073ffffffffffffffffffffffffffffffffffffffff1681565b34801561040557600080fd5b506101986108f3565b34801561041a57600080fd5b5061019861042936600461187e565b610979565b34801561043a57600080fd5b50610280610449366004611845565b600360209081526000928352604080842090915290825290205481565b34801561047257600080fd5b50610280610a09565b34801561048757600080fd5b50610198610496366004611804565b610aa1565b3480156104a757600080fd5b5061019833600090815260046020526040812055565b610198610bc0565b3480156104d157600080fd5b506101986104e036600461187e565b610c2c565b3480156104f157600080fd5b5061050561050036600461192a565b610ce3565b60405161024a91906119f4565b61051a611015565b600154604080517f390b9978000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff90921691630396cb609134918591859163390b99789160048082019260209290919082900301816000875af1158015610598573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bc9190611a07565b6105c69190611a53565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815263ffffffff9190911660048201526024016000604051808303818588803b15801561061c57600080fd5b505af1158015610630573d6000803e3d6000fd5b505050505050565b610640611015565b6001546040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561061c57600080fd5b6106d673ffffffffffffffffffffffffffffffffffffffff8416333084611096565b73ffffffffffffffffffffffffffffffffffffffff83811660009081526002602052604090205416610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f756e737570706f7274656420746f6b656e00000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600360209081526040808320938616835292905290812080548392906107ad908490611a7b565b909155505073ffffffffffffffffffffffffffffffffffffffff821633036107e4576107e433600090815260046020526040812055565b505050565b6107f1611015565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260026020526040902054161561082357600080fd5b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b61087e611015565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6108cd611015565b6108d76000611172565b565b6108e16111e7565b6108ed8484848461120b565b50505050565b6108fb611015565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561096557600080fd5b505af11580156108ed573d6000803e3d6000fd5b610981611015565b6001546040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301529091169063c23a5cea90602401600060405180830381600087803b1580156109ee57600080fd5b505af1158015610a02573d6000803e3d6000fd5b5050505050565b6001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c9190611a93565b905090565b3360009081526004602052604090205415801590610acd57503360009081526004602052604090205443115b610b59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4465706f7369745061796d61737465723a206d75737420756e6c6f636b546f6b60448201527f656e4465706f73697400000000000000000000000000000000000000000000006064820152608401610760565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260036020908152604080832033845290915281208054839290610b99908490611aac565b909155506107e4905073ffffffffffffffffffffffffffffffffffffffff84168383611375565b6001546040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063b760faf99034906024016000604051808303818588803b1580156109ee57600080fd5b610c34611015565b73ffffffffffffffffffffffffffffffffffffffff8116610cd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610760565b610ce081611172565b50565b60606188b88460a0013511610d7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4465706f7369745061796d61737465723a2067617320746f6f206c6f7720666f60448201527f7220706f73744f700000000000000000000000000000000000000000000000006064820152608401610760565b366000610d8b610120870187611ac3565b909250905060288114610e20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f4465706f7369745061796d61737465723a207061796d6173746572416e64446160448201527f7461206d757374207370656369667920746f6b656e00000000000000000000006064820152608401610760565b6000610e2f8260148186611b2f565b610e3891611b59565b60601c905086356000610e4b83886113cb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604090205490915015610f00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4465706f7369745061796d61737465723a206465706f736974206e6f74206c6f60448201527f636b6564000000000000000000000000000000000000000000000000000000006064820152608401610760565b73ffffffffffffffffffffffffffffffffffffffff808416600090815260036020908152604080832093861683529290522054811115610fc2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4465706f7369745061796d61737465723a206465706f73697420746f6f206c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610760565b6040805173ffffffffffffffffffffffffffffffffffffffff93841660208201529390921683830152606083015260808083018790528151808403909101815260a09092019052925050505b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610760565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526108ed9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611519565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60015473ffffffffffffffffffffffffffffffffffffffff1633146108d757600080fd5b600080808061121c86880188611ba1565b9350935093509350600081836188b8886112369190611a7b565b6112409190611be7565b61124a9190611c24565b9050600289600281111561126057611260611c5f565b1461128c5761128773ffffffffffffffffffffffffffffffffffffffff8516863084611096565b6112d6565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152600360209081526040808320938916835292905290812080548392906112d0908490611aac565b90915550505b73ffffffffffffffffffffffffffffffffffffffff84166000908152600360205260408120829161131c60005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113659190611a7b565b9091555050505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107e49084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016110f0565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526002602052604081205490911680611482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4465706f7369745061796d61737465723a20756e737570706f7274656420746f60448201527f6b656e00000000000000000000000000000000000000000000000000000000006064820152608401610760565b6040517fd1eca9cf0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff82169063d1eca9cf90602401602060405180830381865afa1580156114ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115119190611a93565b949350505050565b600061157b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166116259092919063ffffffff16565b8051909150156107e457808060200190518101906115999190611c8e565b6107e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610760565b606061151184846000858573ffffffffffffffffffffffffffffffffffffffff85163b6116ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610760565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516116d79190611cb0565b60006040518083038185875af1925050503d8060008114611714576040519150601f19603f3d011682016040523d82523d6000602084013e611719565b606091505b5091509150611729828286611734565b979650505050505050565b6060831561174357508161100e565b8251156117535782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076091906119f4565b63ffffffff81168114610ce057600080fd5b6000602082840312156117ab57600080fd5b813561100e81611787565b73ffffffffffffffffffffffffffffffffffffffff81168114610ce057600080fd5b600080604083850312156117eb57600080fd5b82356117f6816117b6565b946020939093013593505050565b60008060006060848603121561181957600080fd5b8335611824816117b6565b92506020840135611834816117b6565b929592945050506040919091013590565b6000806040838503121561185857600080fd5b8235611863816117b6565b91506020830135611873816117b6565b809150509250929050565b60006020828403121561189057600080fd5b813561100e816117b6565b600080600080606085870312156118b157600080fd5b8435600381106118c057600080fd5b9350602085013567ffffffffffffffff808211156118dd57600080fd5b818701915087601f8301126118f157600080fd5b81358181111561190057600080fd5b88602082850101111561191257600080fd5b95986020929092019750949560400135945092505050565b60008060006060848603121561193f57600080fd5b833567ffffffffffffffff81111561195657600080fd5b8401610160818703121561196957600080fd5b95602085013595506040909401359392505050565b60005b83811015611999578181015183820152602001611981565b838111156108ed5750506000910152565b600081518084526119c281602086016020860161197e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061100e60208301846119aa565b600060208284031215611a1957600080fd5b815161100e81611787565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff808316818516808303821115611a7257611a72611a24565b01949350505050565b60008219821115611a8e57611a8e611a24565b500190565b600060208284031215611aa557600080fd5b5051919050565b600082821015611abe57611abe611a24565b500390565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611af857600080fd5b83018035915067ffffffffffffffff821115611b1357600080fd5b602001915036819003821315611b2857600080fd5b9250929050565b60008085851115611b3f57600080fd5b83861115611b4c57600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015611b995780818660140360031b1b83161692505b505092915050565b60008060008060808587031215611bb757600080fd5b8435611bc2816117b6565b93506020850135611bd2816117b6565b93969395505050506040820135916060013590565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c1f57611c1f611a24565b500290565b600082611c5a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215611ca057600080fd5b8151801515811461100e57600080fd5b60008251611cc281846020870161197e565b919091019291505056fea26469706673582212205b62e646c1b1e6eec83f90aaf57cbc90427b9925e180dcb91fa592155ffa9ff664736f6c634300080f0033";

type DepositPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositPaymaster__factory extends ContractFactory {
  constructor(...args: DepositPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<DepositPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): DepositPaymaster {
    return super.attach(address) as DepositPaymaster;
  }
  override connect(signer: Signer): DepositPaymaster__factory {
    return super.connect(signer) as DepositPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositPaymasterInterface {
    return new utils.Interface(_abi) as DepositPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositPaymaster {
    return new Contract(address, _abi, signerOrProvider) as DepositPaymaster;
  }
}
